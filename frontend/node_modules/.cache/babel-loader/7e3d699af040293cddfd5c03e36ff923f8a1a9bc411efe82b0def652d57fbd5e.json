{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smitp\\\\OneDrive\\\\Desktop\\\\food hackathon\\\\Inventory-Management-App\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    text: 'Welcome to the AI Inventory Manager! How can I assist you today?'\n  }]);\n  const [input, setInput] = useState('');\n  const chatEndRef = useRef(null);\n  const handleSendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        type: 'user',\n        text: input\n      };\n      setMessages(prev => [...prev, userMessage]);\n      const requestData = {\n        input,\n        location: 'user-defined-location' // Replace with actual location if available\n      };\n      setInput('');\n      try {\n        const response = await fetch('https://foodapi-sa0l.onrender.com/ai_InventoryManeger', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestData)\n        });\n        if (!response.ok) {\n          throw new Error(`Server error: ${response.status}`);\n        }\n        const data = await response.json();\n        setMessages(prev => [...prev, {\n          type: 'bot',\n          text: data.response || 'Received a response, but it is empty.'\n        }]);\n      } catch (error) {\n        setMessages(prev => [...prev, {\n          type: 'bot',\n          text: `An error occurred: ${error.message}`\n        }]);\n      }\n    }\n  };\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI INVENTORY MANAGER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"chat-description\",\n      children: \"This is your personal assistant for managing inventory and detecting food spoilage. Ask any questions or give commands related to inventory management.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${msg.type}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"chat-input\",\n        value: input,\n        placeholder: \"Type your message here...\",\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"8p7KAmH72x8hn/yCswONHSPM51E=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","type","text","input","setInput","chatEndRef","handleSendMessage","trim","userMessage","prev","requestData","location","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","error","message","_chatEndRef$current","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","value","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/smitp/OneDrive/Desktop/food hackathon/Inventory-Management-App/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([\r\n    { type: 'bot', text: 'Welcome to the AI Inventory Manager! How can I assist you today?' }\r\n  ]);\r\n\r\n  const [input, setInput] = useState('');\r\n  const chatEndRef = useRef(null);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (input.trim()) {\r\n      const userMessage = { type: 'user', text: input };\r\n      setMessages((prev) => [...prev, userMessage]);\r\n\r\n      const requestData = {\r\n        input,\r\n        location: 'user-defined-location', // Replace with actual location if available\r\n      };\r\n\r\n      setInput('');\r\n\r\n      try {\r\n        const response = await fetch('https://foodapi-sa0l.onrender.com/ai_InventoryManeger', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(requestData),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Server error: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { type: 'bot', text: data.response || 'Received a response, but it is empty.' },\r\n        ]);\r\n      } catch (error) {\r\n        setMessages((prev) => [\r\n          ...prev,\r\n          { type: 'bot', text: `An error occurred: ${error.message}` },\r\n        ]);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Scroll to bottom on new message\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Header with Background Image */}\r\n      <header className=\"chat-header\">\r\n        <h1>AI INVENTORY MANAGER</h1>\r\n      </header>\r\n\r\n      {/* Description Below Header */}\r\n      <p className=\"chat-description\">\r\n        This is your personal assistant for managing inventory and detecting food spoilage. \r\n        Ask any questions or give commands related to inventory management.\r\n      </p>\r\n\r\n      {/* Chat History Section */}\r\n      <div className=\"chat-history\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-bubble ${msg.type}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        <div ref={chatEndRef} /> {/* Scroll to this div */}\r\n      </div>\r\n\r\n      {/* Input Section */}\r\n      <div className=\"chat-input-area\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"chat-input\"\r\n          value={input}\r\n          placeholder=\"Type your message here...\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}